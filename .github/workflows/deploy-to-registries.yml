name: Deploy to Registries

on:
  workflow_dispatch:
    inputs:
      code:
        description: "Secure Code"
        type: string
        required: true

permissions:
  contents: write
  packages: write

jobs:
  docker:
    name: Deploy to Registries
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Verify Secure Code
        run: |
          if [[ "${{ inputs.code }}" != "${{ secrets.SECURE_CODE }}" ]]; then
            echo "❌ Invalid Secure Code"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Latest Changes
        run: git pull origin main

      - name: Get Latest Version
        id: set_version
        run: echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.19.0"

      - name: Install Dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      - name: Run Build (Frontend)
        working-directory: ./frontend
        run: npm run build

      - name: Install Dependencies (BackEnd)
        working-directory: ./backend
        run: npm install

      - name: Run Tests (BackEnd)
        working-directory: ./backend
        run: npm test

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push to Registries
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            APP_VERSION=${{ steps.set_version.outputs.version }}
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_HUB_USER }}/mockly:${{ steps.set_version.outputs.version }}
            docker.io/${{ secrets.DOCKER_HUB_USER }}/mockly:latest
            ghcr.io/${{ github.repository_owner }}/mockly:${{ steps.set_version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/mockly:latest