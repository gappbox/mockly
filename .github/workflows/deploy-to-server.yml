name: Deploy to Remote Server

on:
  push:
    branches:
      - test
#  workflow_dispatch:
#    inputs:
#      code:
#        description: "Secure Code"
#        type: string
#        required: true

jobs:
  build:
    name: Build Artifact
    runs-on: ubuntu-latest
    steps:
#      - name: Verify Secure Code
#        run: |
#          if [[ "${{ inputs.code }}" != "${{ secrets.SECURE_CODE }}" ]]; then
#            echo "❌ Invalid Secure Code"
#            exit 1
#          fi

      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: Get Latest Changes
#        run: git pull origin main

      - name: Get Latest Version
        run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0"

      - name: Install Dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      - name: Run Build (Frontend)
        working-directory: ./frontend
        run: npm run build

      - name: Install Dependencies (BackEnd)
        working-directory: ./backend
        run: npm install

      - name: Run Tests (BackEnd)
        working-directory: ./backend
        run: npm test

      - name: Build Artifact
        run: |
          mkdir -p temp public
          cp -r ./frontend/dist/* public
          cd backend
          zip -r ../artifact.zip src package.json package-lock.json ../public
          cd ..
          mv artifact.zip ./temp

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: temp/artifact.zip

  deploy:
    name: Deploy Artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: temp

      - name: Upload Artifact
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./temp/
          server-dir: ./

  execute:
    name: Execute Commands
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Refresh NodeApp
        run: |
          curl -s -i -X POST "${{ secrets.WEBHOOK }}" \
          -H "Authorization: Bearer ${{ secrets.WEBHOOK_SECRET }}" \
          -H "Content-Type: application/json" \
          -d '{"command": "refreshNodeApp", "payload": {"target": "${{ secrets.TARGET }}"}}'

      - name: Restart NodeApp
        run: |
          curl -s -i -X POST "${{ secrets.WEBHOOK }}" \
          -H "Authorization: Bearer ${{ secrets.WEBHOOK_SECRET }}" \
          -H "Content-Type: application/json" \
          -d '{"command": "restartNodeApp", "payload": {"targetId": "${{ secrets.TARGET_ID }}"}}'